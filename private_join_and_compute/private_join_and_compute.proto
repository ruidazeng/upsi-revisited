/*
 * Copyright 2019 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package private_join_and_compute;

import "private_join_and_compute/private_intersection_sum.proto";

message ClientMessage {
  oneof client_message_oneof {
    PrivateIntersectionSumClientMessage
        private_intersection_sum_client_message = 1;
  }
}

message ServerMessage {
  oneof server_message_oneof {
    PrivateIntersectionSumServerMessage
        private_intersection_sum_server_message = 1;
  }
}

// gRPC interface for Private Join and Compute.
service PrivateJoinAndComputeRpc {
  // Handles a single protocol round.
  rpc Handle(ClientMessage) returns (ServerMessage) {}
}
